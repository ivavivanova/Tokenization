//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TokenizationSOAPClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.ITokenServer")]
    public interface ITokenServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/ValidAndLuhnTest", ReplyAction="http://tempuri.org/ITokenServer/ValidAndLuhnTestResponse")]
        bool ValidAndLuhnTest(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/ValidAndLuhnTest", ReplyAction="http://tempuri.org/ITokenServer/ValidAndLuhnTestResponse")]
        System.Threading.Tasks.Task<bool> ValidAndLuhnTestAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/MakeTokenByID", ReplyAction="http://tempuri.org/ITokenServer/MakeTokenByIDResponse")]
        string MakeTokenByID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/MakeTokenByID", ReplyAction="http://tempuri.org/ITokenServer/MakeTokenByIDResponse")]
        System.Threading.Tasks.Task<string> MakeTokenByIDAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/UsersSave", ReplyAction="http://tempuri.org/ITokenServer/UsersSaveResponse")]
        void UsersSave(string userName, string password, int access);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/UsersSave", ReplyAction="http://tempuri.org/ITokenServer/UsersSaveResponse")]
        System.Threading.Tasks.Task UsersSaveAsync(string userName, string password, int access);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/ValidationLog", ReplyAction="http://tempuri.org/ITokenServer/ValidationLogResponse")]
        int ValidationLog(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/ValidationLog", ReplyAction="http://tempuri.org/ITokenServer/ValidationLogResponse")]
        System.Threading.Tasks.Task<int> ValidationLogAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/AreInSystem", ReplyAction="http://tempuri.org/ITokenServer/AreInSystemResponse")]
        int AreInSystem(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/AreInSystem", ReplyAction="http://tempuri.org/ITokenServer/AreInSystemResponse")]
        System.Threading.Tasks.Task<int> AreInSystemAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/TokensSave", ReplyAction="http://tempuri.org/ITokenServer/TokensSaveResponse")]
        void TokensSave(string token, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/TokensSave", ReplyAction="http://tempuri.org/ITokenServer/TokensSaveResponse")]
        System.Threading.Tasks.Task TokensSaveAsync(string token, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/LoadID", ReplyAction="http://tempuri.org/ITokenServer/LoadIDResponse")]
        string LoadID(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/LoadID", ReplyAction="http://tempuri.org/ITokenServer/LoadIDResponse")]
        System.Threading.Tasks.Task<string> LoadIDAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/IsTokenInSystem", ReplyAction="http://tempuri.org/ITokenServer/IsTokenInSystemResponse")]
        bool IsTokenInSystem(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/IsTokenInSystem", ReplyAction="http://tempuri.org/ITokenServer/IsTokenInSystemResponse")]
        System.Threading.Tasks.Task<bool> IsTokenInSystemAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/SortedByIDAndSaveInFile", ReplyAction="http://tempuri.org/ITokenServer/SortedByIDAndSaveInFileResponse")]
        void SortedByIDAndSaveInFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/SortedByIDAndSaveInFile", ReplyAction="http://tempuri.org/ITokenServer/SortedByIDAndSaveInFileResponse")]
        System.Threading.Tasks.Task SortedByIDAndSaveInFileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/SortedByTokenAndSaveInFile", ReplyAction="http://tempuri.org/ITokenServer/SortedByTokenAndSaveInFileResponse")]
        void SortedByTokenAndSaveInFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenServer/SortedByTokenAndSaveInFile", ReplyAction="http://tempuri.org/ITokenServer/SortedByTokenAndSaveInFileResponse")]
        System.Threading.Tasks.Task SortedByTokenAndSaveInFileAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITokenServerChannel : TokenizationSOAPClient.ServiceReference.ITokenServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TokenServerClient : System.ServiceModel.ClientBase<TokenizationSOAPClient.ServiceReference.ITokenServer>, TokenizationSOAPClient.ServiceReference.ITokenServer {
        
        public TokenServerClient() {
        }
        
        public TokenServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TokenServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ValidAndLuhnTest(string id) {
            return base.Channel.ValidAndLuhnTest(id);
        }
        
        public System.Threading.Tasks.Task<bool> ValidAndLuhnTestAsync(string id) {
            return base.Channel.ValidAndLuhnTestAsync(id);
        }
        
        public string MakeTokenByID(string id) {
            return base.Channel.MakeTokenByID(id);
        }
        
        public System.Threading.Tasks.Task<string> MakeTokenByIDAsync(string id) {
            return base.Channel.MakeTokenByIDAsync(id);
        }
        
        public void UsersSave(string userName, string password, int access) {
            base.Channel.UsersSave(userName, password, access);
        }
        
        public System.Threading.Tasks.Task UsersSaveAsync(string userName, string password, int access) {
            return base.Channel.UsersSaveAsync(userName, password, access);
        }
        
        public int ValidationLog(string userName, string password) {
            return base.Channel.ValidationLog(userName, password);
        }
        
        public System.Threading.Tasks.Task<int> ValidationLogAsync(string userName, string password) {
            return base.Channel.ValidationLogAsync(userName, password);
        }
        
        public int AreInSystem(string userName) {
            return base.Channel.AreInSystem(userName);
        }
        
        public System.Threading.Tasks.Task<int> AreInSystemAsync(string userName) {
            return base.Channel.AreInSystemAsync(userName);
        }
        
        public void TokensSave(string token, string id) {
            base.Channel.TokensSave(token, id);
        }
        
        public System.Threading.Tasks.Task TokensSaveAsync(string token, string id) {
            return base.Channel.TokensSaveAsync(token, id);
        }
        
        public string LoadID(string token) {
            return base.Channel.LoadID(token);
        }
        
        public System.Threading.Tasks.Task<string> LoadIDAsync(string token) {
            return base.Channel.LoadIDAsync(token);
        }
        
        public bool IsTokenInSystem(string token) {
            return base.Channel.IsTokenInSystem(token);
        }
        
        public System.Threading.Tasks.Task<bool> IsTokenInSystemAsync(string token) {
            return base.Channel.IsTokenInSystemAsync(token);
        }
        
        public void SortedByIDAndSaveInFile() {
            base.Channel.SortedByIDAndSaveInFile();
        }
        
        public System.Threading.Tasks.Task SortedByIDAndSaveInFileAsync() {
            return base.Channel.SortedByIDAndSaveInFileAsync();
        }
        
        public void SortedByTokenAndSaveInFile() {
            base.Channel.SortedByTokenAndSaveInFile();
        }
        
        public System.Threading.Tasks.Task SortedByTokenAndSaveInFileAsync() {
            return base.Channel.SortedByTokenAndSaveInFileAsync();
        }
    }
}
